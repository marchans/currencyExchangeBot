const TelegramBot = require('node-telegram-bot-api');

const schedule = require('node-schedule');

// replace the value below with the Telegram token you receive from @BotFather

const token = '453855287:AAFWGwmSQKOEVcoh2rFuV50_VZR1f-GXPy8';


// Create a bot that uses 'polling' to fetch new updates

const bot = new TelegramBot(token, {polling: true});


const exchangeRateURL = 'https://bank.gov.ua/NBUStatService/v1/statdirectory/exchange?json';

var exchangeRates = {

    UAH: 1.0,

    USD: 27.0,

    EUR: 30.0,

    GBP: 36.0,


};


const helpMessage = '–¶–µ–π –±–æ—Ç –¥–æ–ø–æ–º–æ–∂–µ –í–∞–º —à–≤–∏–¥–∫–æ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç–∏ —Å—É–º–∏ –∑ –æ–¥–Ω—ñ—î—ó –≤–∞–ª—é—Ç–∏ –¥–æ —ñ–Ω—à–æ—ó (–∑–≥—ñ–¥–Ω–æ –∫—É—Ä—Å—É –ù–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ–≥–æ –ë–∞–Ω–∫—É –£–∫—Ä–∞—ó–Ω–∏, —â–æ –æ–Ω–æ–≤–ª—é—î—Ç—å—Å—è —â–æ–¥–µ–Ω–Ω–æ). \n' +
    '–ë–æ—Ç –æ–±—Ä–æ–±–ª—é—î —Ç–µ–∫—Å—Ç–æ–≤—ñ –∑–∞–ø–∏—Ç–∏ —Ç–∏–ø—É "/convert 100 uah to usd" ‚Äî –¥–µ  100 ‚Äî —Å—É–º–∞ —Ü–∏—Ñ—Ä–∞–º–∏ (–¥–µ—Å—è—Ç–∫–æ–≤–∏–π —Ä–æ–∑–¥—ñ–ª—å–Ω–∏–∫ ‚Äî –∫—Ä–∞–ø–∫–∞), uah/usd ‚Äî –º—ñ–∂–Ω–∞—Ä–æ–¥–Ω—ñ –∫–æ–¥–∏ –≤–∞–ª—é—Ç –ª–∞—Ç–∏–Ω–∏—Ü–µ—é (–º–æ–∂—É—Ç—å –±—É—Ç–∏ –∑–∞–ø–∏—Å–∞–Ω—ñ —É –±—É–¥—å-—è–∫–æ–º—É —Ä–µ–≥—ñ—Å—Ç—Ä—ñ). –î–µ—è–∫—ñ —à–∏—Ä–æ–∫–æ–≤–∂–∏–≤–∞–Ω—ñ –∫–æ–¥–∏ –≤–∞–ª—é—Ç: \n' +
    'üá∫üá¶ UAH ‚Äî –≥—Ä–∏–≤–Ω—è\n' +
    'üá∑üá∫ RUB ‚Äî —Ä–æ—Å—ñ–π—Å—å–∫–∏–π —Ä—É–±–ª—å\n' +
    'üá∫üá∏ USD ‚Äî –¥–æ–ª–∞—Ä –°–®–ê\n' +
    'üá™üá∫ EUR ‚Äî —î–≤—Ä–æ\n' +
    'üá¨üáß GBP ‚Äî —Ñ—É–Ω—Ç —Å—Ç–µ—Ä–ª—ñ–Ω–≥—ñ–≤\n' +
    'üáµüá± PLN ‚Äî –∑–ª–æ—Ç–∏–π\n' +
    'üáØüáµ JPY ‚Äî —î–Ω–∞\n' +
    'üá®üá≥ CNY ‚Äî —é–∞–Ω—å\n' +
    '–û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫—É—Ä—Å—É –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è —â–æ–¥–µ–Ω–Ω–æ, –∞–ª–µ —è–∫—â–æ –í–∏ —Ö–æ—á–µ—Ç–µ —É–ø–µ–≤–Ω–∏—Ç–∏—Å—è, —â–æ –≤—ñ–Ω –∞–∫—Ç—É–∞–ª—å–Ω–∏–π, –í–∏ –º–æ–∂–µ—Ç–µ –∑—Ä–æ–±–∏—Ç–∏ —Ü–µ —Å–∞–º–æ—Å—Ç—ñ–π–Ω–æ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–æ–º–∞–Ω–¥–∏ /update\n' +
    '–ü–æ–¥–∏–≤–∏—Ç–∏—Å—è –∞–∫—Ç—É–∞–ª—å–Ω–∏–π –∫—É—Ä—Å –≤–∞–ª—é—Ç –¥–ª—è –Ω–∞–π–±—ñ–ª—å—à –ø–æ–ø—É–ª—è—Ä–Ω–∏—Ö –≤–∞–ª—é—Ç –º–æ–∂–Ω–∞ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–æ–º–∞–Ω–¥–∏ /rates\n' +
    '–î–ª—è –≤–∏–∫–ª–∏–∫—É —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó ‚Äî –∫–æ–º–∞–Ω–¥–∞ /help';


function updateExchangeRates() {

    var request = require('request');

    request.get(exchangeRateURL, {}, function (err, res, data) {

        if (err) {

            return console.log(err);

        }

        if (res.statusCode != 209) {

            var JSONDATA = data;

            exchangeRates = [];

            exchangeRates['UAH'] = 1;

            var jsonList = JSON.parse(JSONDATA);

            jsonList.forEach(function (entry) {

                exchangeRates[entry.cc] = entry.rate;
            });
            // console.log(exchangeRates);

        }

    });


}


//updates exchange rates every day at 9 am

schedule.scheduleJob('0 9 * * * ', function () {

    updateExchangeRates();

});


//updates exchange rates every day at 9 am
schedule.scheduleJob('0 9 * * * ', function () {
    updateExchangeRates();
});


bot.onText(/\/update/, function (msg, match) {
    updateExchangeRates();
});


bot.onText(/\/convert (.+)/, function (msg, match) {

    var tokens = msg.text.split(" ");

    if (tokens.length != 5) {
        bot.sendMessage(msg.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø–∏—Å—É. –°–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—å \help.");
        return;

    }

    var re = /^\$?([0-9]{1,3},([0-9]{3},)*[0-9]{3}|[0-9]+)(.[0-9][0-9])?$/;
    if (!re.test(tokens[1])) {
        bot.sendMessage(msg.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø–∏—Å—É. –°–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—å \help.");
        return;
    }

    // var arr = ['uah', 'usd', 'eur', 'gbp', 'rub', 'pln', 'jpy', 'cny' ];


    //
    // function find(array, value) {
    //     if (array.indexOf) {
    //         return array.indexOf(value);
    //     }
    //
    //     for (var i = 0; i < array.length; i++) {
    //         if (array[i] === value) return 1;
    //     }
    //
    //     return -1;
    // }
    //
    //
    // if (find(arr, tokens[2]) === -1 || find(arr, tokens[4]) === -1) {
    //     bot.sendMessage(msg.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø–∏—Å—É. –°–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—å \help.");
    //     return;
    // }

    if(!exchangeRates.hasOwnProperty(tokens[2].toUpperCase()) || !exchangeRates.hasOwnProperty(tokens[4].toUpperCase())){
        bot.sendMessage(msg.chat.id, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø–∏—Å—É. –°–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—å /help.");
        return;
    }


    var initSum = tokens[1];

    var initCurrency = tokens[2].toUpperCase();

    var toCurrency = tokens[4].toUpperCase();

    var initCurrencyToUahRate = exchangeRates[initCurrency];

    var uahToToCurrencyRate = exchangeRates[toCurrency];

    var finalSum = initSum * initCurrencyToUahRate / uahToToCurrencyRate;

    bot.sendMessage(msg.chat.id, "–°—É–º–∞ –ø—ñ—Å–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—ó: " + finalSum.toFixed(2) + toCurrency);


});


bot.onText(/\/start/, function (msg, match) {

    updateExchangeRates();

});


bot.onText(/\/rates/, function (msg, match) {
    var exchangeRatesForToday = "–ö—É—Ä—Å –≤–∞–ª—é—Ç (–¥–æ –≥—Ä–∏–≤–Ω—ñ) –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ\n" + "üá∫üá∏ 1.00 USD -- " + exchangeRates['USD'].toFixed(3) + " –≥—Ä–∏–≤–µ–Ω—å\n" + "üá™üá∫ 1.00 EUR -- " + exchangeRates['EUR'].toFixed(3) + " –≥—Ä–∏–≤–µ–Ω—å\n" + "üá¨üáß 1.00 GBP -- " + exchangeRates['GBP'].toFixed(3) + " –≥—Ä–∏–≤–µ–Ω—å\n" + "üá∑üá∫ 1.00 RUB -- " + exchangeRates['RUB'].toFixed(3) + " –≥—Ä–∏–≤–µ–Ω—å\n";
    bot.sendMessage(msg.chat.id, exchangeRatesForToday);
});

bot.onText(/\/help/, function (msg, match) {
    bot.sendMessage(msg.chat.id, helpMessage);
});
